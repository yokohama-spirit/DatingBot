// <auto-generated />
using System.Collections.Generic;
using DatingBotLibrary.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DatingBotLibrary.Migrations
{
    [DbContext(typeof(DatabaseConnect))]
    partial class DatabaseConnectModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DatingBotLibrary.Domain.Entities.Photo", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("FileId")
                        .HasColumnType("text");

                    b.Property<string>("ProfileId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ProfileId");

                    b.ToTable("Photos");
                });

            modelBuilder.Entity("DatingBotLibrary.Domain.Entities.Profile", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int>("Age")
                        .HasColumnType("integer");

                    b.Property<string>("Bio")
                        .HasColumnType("text");

                    b.Property<long>("ChatId")
                        .HasColumnType("bigint");

                    b.Property<string>("City")
                        .HasColumnType("text");

                    b.Property<int?>("Gender")
                        .HasColumnType("integer");

                    b.Property<int?>("InInterests")
                        .HasColumnType("integer");

                    b.PrimitiveCollection<HashSet<long>>("Likes")
                        .IsRequired()
                        .HasColumnType("bigint[]");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<bool>("isFrozen")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("Profiles");
                });

            modelBuilder.Entity("DatingBotLibrary.Domain.Entities.Video", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("FileId")
                        .HasColumnType("text");

                    b.Property<string>("ProfileId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ProfileId");

                    b.ToTable("Videos");
                });

            modelBuilder.Entity("DatingBotLibrary.Domain.Entities.Photo", b =>
                {
                    b.HasOne("DatingBotLibrary.Domain.Entities.Profile", "UserProfile")
                        .WithMany("Photos")
                        .HasForeignKey("ProfileId");

                    b.Navigation("UserProfile");
                });

            modelBuilder.Entity("DatingBotLibrary.Domain.Entities.Video", b =>
                {
                    b.HasOne("DatingBotLibrary.Domain.Entities.Profile", "UserProfile")
                        .WithMany("Videos")
                        .HasForeignKey("ProfileId");

                    b.Navigation("UserProfile");
                });

            modelBuilder.Entity("DatingBotLibrary.Domain.Entities.Profile", b =>
                {
                    b.Navigation("Photos");

                    b.Navigation("Videos");
                });
#pragma warning restore 612, 618
        }
    }
}
